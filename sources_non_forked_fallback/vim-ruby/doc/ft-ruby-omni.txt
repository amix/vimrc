RUBY							*ft-ruby-omni*
							*vim-ruby-omni*

Completion of Ruby code requires that Vim be built with |+ruby|.

Ruby completion will parse your buffer on demand in order to provide a list of
completions.  These completions will be drawn from modules loaded by "require"
and modules defined in the current buffer.

The completions provided by CTRL-X CTRL-O are sensitive to the context:

          CONTEXT                          COMPLETIONS PROVIDED ~

 1. Not inside a class definition    Classes, constants and globals

 2. Inside a class definition        Methods or constants defined in the class

 3. After '.', '::' or ':'           Methods applicable to the object being
                                       dereferenced

 4. After ':' or ':foo'              Symbol name (beginning with "foo")

Notes:
 - Vim will load/evaluate code in order to provide completions.  This may
   cause some code execution, which may be a concern.  This is no longer
   enabled by default, to enable this feature add >
     let g:rubycomplete_buffer_loading = 1
< - In context 1 above, Vim can parse the entire buffer to add a list of
   classes to the completion results.  This feature is turned off by default,
   to enable it add >
     let g:rubycomplete_classes_in_global = 1
<   to your vimrc
 - In context 2 above, anonymous classes are not supported.
 - In context 3 above, Vim will attempt to determine the methods supported by
   the object.
 - Vim can detect and load the Rails environment for files within a rails
   project.  The feature is disabled by default, to enable it add >
     let g:rubycomplete_rails = 1
<   to your vimrc
 - Vim can parse a Gemfile, in case gems are being implicitly required.  To
   activate the feature: >
     let g:rubycomplete_load_gemfile = 1
<   To specify an alternative path, use: >
     let g:rubycomplete_gemfile_path = 'Gemfile.aux'
<   To use Bundler.require instead of parsing the Gemfile, set: >
     let g:rubycomplete_use_bundler = 1
<   To use custom paths that should be added to $LOAD_PATH to correctly
   resolve requires, set: >
     let g:rubycomplete_load_paths = ["/path/to/code", "./lib/example"]


 vim:tw=78:sw=4:ts=8:ft=help:norl:
