snippet mod
	module `substitute(substitute(expand('%:r'), '[/\\]','.','g'),'^\%(\l*\.\)\?','','')`
	${0}
snippet imp
	import ${0:List}
snippet fn
	${1:fn} : ${2:a} -> ${3:a}
	$1 ${4} =
		${0}
snippet fn1
	${1:fn} : ${2:a} -> ${3:a}
	$1 ${4} =
		${0}
snippet fn2
	${1:fn} : ${2:a} -> ${3:a} -> ${4:a}
	$1 ${5} =
		${0}
snippet fn3
	${1:fn} : ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}
	$1 ${6} =
		${0}
snippet fn0
	${1:fn} : ${2:a}
	$1 =
		${0}
snippet case
	case ${1} of
		${2} =>
			${0}
snippet let
	let
		${1} =
			${2}
	in
		${0}
snippet wh
	where
		${0}
snippet if
	if ${1} then
		${2:${VISUAL}}
	else
		${0}
	${0}
snippet \ "Lambda function (\x => ...)"
	(\\${1:_} => ${0})
