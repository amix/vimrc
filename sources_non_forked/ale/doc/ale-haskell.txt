===============================================================================
ALE Haskell Integration                                   *ale-haskell-options*


===============================================================================
brittany                                                 *ale-haskell-brittany*

g:ale_haskell_brittany_executable           *g:ale_haskell_brittany_executable*
                                            *b:ale_haskell_brittany_executable*
  Type: |String|
  Default: `'brittany'`

  This variable can be changed to use a different executable for brittany.

===============================================================================
ghc                                                           *ale-haskell-ghc*

g:ale_haskell_ghc_options                           *g:ale_haskell_ghc_options*
                                                    *b:ale_haskell_ghc_options*
  Type: |String|
  Default: `'-fno-code -v0'`

  This variable can be changed to modify flags given to ghc.

===============================================================================
cabal-ghc                                               *ale-haskell-cabal-ghc*

g:ale_haskell_cabal_ghc_options               *g:ale_haskell_cabal_ghc_options*
                                              *b:ale_haskell_cabal_ghc_options*
  Type: |String|
  Default: `'-fno-code -v0'`

  This variable can be changed to modify flags given to ghc through cabal
  exec.

===============================================================================
hdevtools                                               *ale-haskell-hdevtools*

g:ale_haskell_hdevtools_executable         *g:ale_haskell_hdevtools_executable*
                                           *b:ale_haskell_hdevtools_executable*
  Type: |String|
  Default: `'hdevtools'`

  This variable can be changed to use a different executable for hdevtools.


g:ale_haskell_hdevtools_options               *g:ale_haskell_hdevtools_options*
                                              *b:ale_haskell_hdevtools_options*
  Type: |String|
  Default: `get(g:, 'hdevtools_options', '-g -Wall')`

  This variable can be changed to modify flags given to hdevtools.

  The hdevtools documentation recommends setting GHC options for `hdevtools`
  with `g:hdevtools_options`. ALE will use the value of `g:hdevtools_options`
  for the value of `g:ale_haskell_hdevtools_options` by default, so this
  option can be respected and overridden specifically for ALE.


===============================================================================
hfmt                                                         *ale-haskell-hfmt*

g:ale_haskell_hfmt_executable                   *g:ale_haskell_hfmt_executable*
                                                *b:ale_haskell_hfmt_executable*
  Type: |String|
  Default: `'hfmt'`

  This variable can be changed to use a different executable for hfmt.

===============================================================================
stack-build                                           *ale-haskell-stack-build*

g:ale_haskell_stack_build_options           *g:ale_haskell_stack_build_options*
                                            *b:ale_haskell_stack_build_options*
  Type: |String|
  Default: `'--fast'`

  We default to using `'--fast'`. Since Stack generates binaries, your
  programs will be slower unless you separately rebuild them outside of ALE.


===============================================================================
hie                                                           *ale-haskell-hie*

g:ale_haskell_hie_executable                     *g:ale_haskell_hie_executable*
                                                 *b:ale_haskell_hie_executable*
  Type: |String|
  Default: `'hie'`

  This variable can be changed to use a different executable for the haskell
  ide engine. i.e. `'hie-wrapper'`

===============================================================================
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
