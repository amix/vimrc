===============================================================================
ALE OCaml Integration                                       *ale-ocaml-options*


===============================================================================
merlin                                                       *ale-ocaml-merlin*

  To use merlin linter for OCaml source code you need to make sure Merlin for
  Vim is correctly configured. See the corresponding Merlin wiki page for
  detailed instructions
  (https://github.com/the-lambda-church/merlin/wiki/vim-from-scratch).

===============================================================================
ols                                                             *ale-ocaml-ols*

  The `ocaml-language-server` is the engine that powers OCaml and ReasonML
  editor support using the Language Server Protocol. See the installation
  instructions:
  https://github.com/freebroccolo/ocaml-language-server#installation

g:ale_ocaml_ols_executable                         *g:ale_ocaml_ols_executable*
                                                   *b:ale_ocaml_ols_executable*
  Type: |String|
  Default: `'ocaml-language-server'`

  This variable can be set to change the executable path for `ols`.

g:ale_ocaml_ols_use_global                         *g:ale_ocaml_ols_use_global*
                                                   *b:ale_ocaml_ols_use_global*
  Type: |String|
  Default: `get(g:, 'ale_use_global_executables', 0)`

  This variable can be set to `1` to always use the globally installed
  executable. See also |ale-integrations-local-executables|.

===============================================================================
ocamlformat                                             *ale-ocaml-ocamlformat*

g:ale_ocaml_ocamlformat_executable         *g:ale_ocaml_ocamlformat_executable*
                                           *b:ale_ocaml_ocamlformat_executable*
  Type: |String|
  Default: `'ocamlformat'`

  This variable can be set to pass the path of the ocamlformat fixer.

g:ale_ocaml_ocamlformat_options               *g:ale_ocaml_ocamlformat_options*
                                              *b:ale_ocaml_ocamlformat_options*
  Type: |String|
  Default: `''`

  This variable can be set to pass additional options to the ocamlformat fixer.

===============================================================================
ocp-indent                                               *ale-ocaml-ocp-indent*

g:ale_ocaml_ocp_indent_executable           *g:ale_ocaml_ocp_indent_executable*
                                            *b:ale_ocaml_ocp_indent_executable*
  Type: |String|
  Default: `ocp-indent`

  This variable can be set to pass the path of the ocp-indent.

g:ale_ocaml_ocp_indent_options                 *g:ale_ocaml_ocp_indent_options*
                                               *b:ale_ocaml_ocp_indent_options*
  Type: |String|
  Default: `''`

  This variable can be set to pass additional options to the ocp-indent.

g:ale_ocaml_ocp_indent_config                   *g:ale_ocaml_ocp_indent_config*
                                                *b:ale_ocaml_ocp_indent_config*
  Type: |String|
  Default: `''`

  This variable can be set to pass additional config to the ocp-indent.
  Expand after "--config=".

  "ocp-indent" can also be enabled from ocamlformat config.


===============================================================================
  vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
