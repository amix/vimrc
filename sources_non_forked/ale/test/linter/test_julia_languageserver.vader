Before:
  Save g:ale_julia_executable

  call ale#assert#SetUpLinterTest('julia', 'languageserver')

After:
  Restore

  call ale#assert#TearDownLinterTest()

Execute(The default executable path should be correct):
  AssertLinter 'julia',
  \ ale#Escape('julia') .
  \' --project=@. --startup-file=no --history-file=no -e ' .
  \ ale#Escape('using LanguageServer; using Pkg; import StaticLint; import SymbolServer; server = LanguageServer.LanguageServerInstance(isdefined(Base, :stdin) ? stdin : STDIN, isdefined(Base, :stdout) ? stdout : STDOUT, dirname(Pkg.Types.Context().env.project_file)); server.runlinter = true; run(server);')

Execute(The executable should be configurable):
  let g:ale_julia_executable = 'julia-new'

  AssertLinter 'julia-new',
  \ ale#Escape('julia-new') .
  \' --project=@. --startup-file=no --history-file=no -e ' .
  \ ale#Escape('using LanguageServer; using Pkg; import StaticLint; import SymbolServer; server = LanguageServer.LanguageServerInstance(isdefined(Base, :stdin) ? stdin : STDIN, isdefined(Base, :stdout) ? stdout : STDOUT, dirname(Pkg.Types.Context().env.project_file)); server.runlinter = true; run(server);')

Execute(The project root should be detected correctly):
  AssertLSPProject ''

  call ale#test#SetFilename('../test-files/julia/test.jl')

  AssertLSPProject ale#path#Simplify(g:dir . '/../test-files/julia')
